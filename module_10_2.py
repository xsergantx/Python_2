"""
Цель: научиться создавать классы наследованные от класса Thread.

Задача "За честь и отвагу!":
Создайте класс Knight, наследованный от Thread, объекты которого будут обладать следующими свойствами:
Атрибут name - имя рыцаря. (str)
Атрибут power - сила рыцаря. (int)
А также метод run, в котором рыцарь будет сражаться с врагами:
При запуске потока должна выводится надпись "<Имя рыцаря>, на нас напали!".
Рыцарь сражается до тех пор, пока не повергнет всех врагов (у всех потоков их 100).
В процессе сражения количество врагов уменьшается на power текущего рыцаря.
По прошествию 1 дня сражения (1 секунды) выводится строка "<Имя рыцаря> сражается <кол-во дней>...,
осталось <кол-во воинов> воинов."
После победы над всеми врагами выводится надпись "<Имя рыцаря> одержал победу спустя <кол-во дней> дней(дня)!"
Как можно заметить нужно сделать задержку в 1 секунду, инструменты для задержки выберите сами.
Пункты задачи:
Создайте класс Knight с соответствующими описанию свойствами.
Создайте и запустите 2 потока на основе класса Knight.
Выведите на экран строку об окончании битв.

"""

from time import sleep
from threading import Thread

class Knight(Thread):
    def __init__(self, name: str, power: int,  enem_num: int = 100):#100 врагов
        super().__init__()#переопределение метода
        self.name = name  # имя рыцаря
        self.power = power  # сила рыцаря
        self.enem_num = enem_num  # количество врагов

    def run(self): # в этом методе описано сражение
        print(f'{self.name}, на нас напали!')
        day_num = 0 # номер дня
        while self.enem_num > 0: # кол-во воинов должно быть больше 0
            sleep(1)# паузма между боями
            day_num += 1 # добавление одного дня
            self.enem_num -= self.power
            print(f'{self.name} сражается {day_num} день(дня)...,',
                  f'осталось {self.enem_num} воинов.')
        print(f'{self.name} одержал победу спустя {day_num} дней(дня)!')


first_knight = Knight('Sir Lancelot', 10)# имя и начальная сила
second_knight = Knight("Sir Galahad", 20)# имя и начальная сила

first_knight.start()
second_knight.start()

first_knight.join()
second_knight.join()

print('Все битвы закончились!')